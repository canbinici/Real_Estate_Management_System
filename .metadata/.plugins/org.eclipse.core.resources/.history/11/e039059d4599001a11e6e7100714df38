
public class ConcreteObserver implements Observer {
	
	private AbstractProperty _property;
	private Customer _customer;
	private String _customer_name;
	private String _type;
	private String _status;
	private String _address;
	private String _desired_type;
	private String _desired_status;
	private String _desired_address;
	
	
	public ConcreteObserver(Customer c){
		_customer = c;
		_customer_name = c.getName();
		_desired_type = c.getDesired_type();
		_desired_status = c.getDesired_status();
		_desired_address = c.getDesired_address();
	}
	
	public void Update(AbstractProperty property){
		_property = property;
		_type = property.getType();
		_status = property.getStatus();
		_address = property.getAddress();
		
		if(_desired_type == _type/* && _desired_status == _status && _desired_address == _address*/){
			if(_desired_status == _status){
				if(_desired_address == _address){
					System.out.println("Notified " + _customer_name + ", " + _type + ", " + _status + ", " +_address);
				}
			}
		}
		else{
			System.out.println("Not matched");
		}
	}
	
	public AbstractProperty getProperty(){
		return _property;
	}
	public void setProperty(AbstractProperty value){
		_property = value;
	}
	public String getName(){
		return _customer_name;
	}
}
